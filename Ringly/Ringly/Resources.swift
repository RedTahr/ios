// Generated by tools/generate-resources, do not modify directly!
// Generated using SwiftGen, by O.Halligon — https://github.com/SwiftGen/SwiftGen

#if os(iOS) || os(tvOS) || os(watchOS)
  import UIKit.UIImage
  typealias Image = UIImage
#elseif os(OSX)
  import AppKit.NSImage
  typealias Image = NSImage
#endif

// swiftlint:disable file_length
// swiftlint:disable line_length

// swiftlint:disable type_body_length
enum Asset: String {
  case activityDayMoon = "ActivityDayMoon"
  case activityDaySun = "ActivityDaySun"
  case activityTrackingAddStatistics = "ActivityTrackingAddStatistics"
  case activityTrackingCaloriesIcon = "ActivityTrackingCaloriesIcon"
  case activityTrackingDistanceIcon = "ActivityTrackingDistanceIcon"
  case activityTrackingOnboardingHealthKit = "ActivityTrackingOnboardingHealthKit"
  case activityTrackingStepsIcon = "ActivityTrackingStepsIcon"
  case activityTrackingTodayArrow = "ActivityTrackingTodayArrow"
  case activityUnavailable = "ActivityUnavailable"
  case addHealthIndicator = "AddHealthIndicator"
  case healthAppConnected = "HealthAppConnected"
  case healthAppDisconnected = "HealthAppDisconnected"
  case healthIndicator = "HealthIndicator"
  case healthKitConnect = "HealthKitConnect"
  case audioPause = "AudioPause"
  case audioPlay = "AudioPlay"
  case backgroundRing = "BackgroundRing"
  case bell = "Bell"
  case mindfulnessBreath = "MindfulnessBreath"
  case minuteButtonBackground = "MinuteButtonBackground"
  case sessionArtwork = "SessionArtwork"
  case onboardingMinus = "OnboardingMinus"
  case onboardingPlus = "OnboardingPlus"
  case openHealthAllCategoriesOn = "OpenHealthAllCategoriesOn"
  case openHealthApps = "OpenHealthApps"
  case openHealthSpringboard = "OpenHealthSpringboard"
  case openHealthTabBar = "OpenHealthTabBar"
  case peripheralConnected = "PeripheralConnected"
  case peripheralDisconnected = "PeripheralDisconnected"
  case preferencesActivityMinus = "PreferencesActivityMinus"
  case preferencesActivityPlus = "PreferencesActivityPlus"
  case ringDisconnected = "RingDisconnected"
  case ringIndicator = "RingIndicator"
  case starLarge = "StarLarge"
  case starSmall = "StarSmall"
  case sunLarge = "SunLarge"
  case sunSmall = "SunSmall"
  case syncedCheckmark = "SyncedCheckmark"
  case addButtonLarge = "AddButtonLarge"
  case addButtonSmall = "AddButtonSmall"
  case alertClose = "AlertClose"
  case authenticationBackArrow = "AuthenticationBackArrow"
  case authenticationCheck = "AuthenticationCheck"
  case authenticationEmail = "AuthenticationEmail"
  case authenticationLargeEnvelope = "AuthenticationLargeEnvelope"
  case authenticationLock = "AuthenticationLock"
  case authenticationLogo = "AuthenticationLogo"
  case authenticationTextLogo = "AuthenticationTextLogo"
  case cameraButton = "CameraButton"
  case cameraFlip = "CameraFlip"
  case flashOff = "FlashOff"
  case flashOn = "FlashOn"
  case info = "Info"
  case ringlyGem = "RinglyGem"
  case ringlyIcon = "RinglyIcon"
  case ringlyWord = "RinglyWord"
  case share = "Share"
  case contactCellDelete = "ContactCellDelete"
  case contactsEmptyHeader = "ContactsEmptyHeader"
  case defaultContact = "DefaultContact"
  case controlCenterBluetooth = "ControlCenterBluetooth"
  case controlCenterBluetoothMask = "ControlCenterBluetoothMask"
  case dfuBattery = "DFUBattery"
  case dfuBatteryCheck = "DFUBatteryCheck"
  case dfuBolt = "DFUBolt"
  case dfuExclamation = "DFUExclamation"
  case ringBox = "RingBox"
  case ringDownArrow = "RingDownArrow"
  case ringFillSmall = "RingFillSmall"
  case ringGlossy = "RingGlossy"
  case ringGlossyCushion = "RingGlossyCushion"
  case ringOutlineLarge = "RingOutlineLarge"
  case ringOutlineMedium = "RingOutlineMedium"
  case ringOutlineSmall = "RingOutlineSmall"
  case settingsBluetoothIcon = "SettingsBluetoothIcon"
  case settingsCellularIcon = "SettingsCellularIcon"
  case settingsHomeScreen = "SettingsHomeScreen"
  case settingsWifiIcon = "SettingsWifiIcon"
  case doneCheckLarge = "DoneCheckLarge"
  case doneCheckSmall = "DoneCheckSmall"
  case doneCheckSmallGreen = "DoneCheckSmallGreen"
  case emptyProfile = "EmptyProfile"
  case fakePreferencesBluetooth = "FakePreferencesBluetooth"
  case fakePreferencesDisclosure = "FakePreferencesDisclosure"
  case forgetThisDeviceSettings = "ForgetThisDeviceSettings"
  case navigationBackArrow = "NavigationBackArrow"
  case noRings = "NoRings"
  case notConnectingAsleep = "NotConnectingAsleep"
  case notConnectingLowBattery = "NotConnectingLowBattery"
  case notConnectingProximity = "NotConnectingProximity"
  case notConnectedButton = "NotConnectedButton"
  case checked = "checked"
  case unchecked = "unchecked"
  case vibrations0 = "Vibrations0"
  case vibrations1 = "Vibrations1"
  case vibrations2 = "Vibrations2"
  case vibrations3 = "Vibrations3"
  case vibrations4 = "Vibrations4"
  case onboardingCalendar = "OnboardingCalendar"
  case onboardingFacebook = "OnboardingFacebook"
  case onboardingInstagram = "OnboardingInstagram"
  case onboardingMail = "OnboardingMail"
  case onboardingMessages = "OnboardingMessages"
  case onboardingPhone = "OnboardingPhone"
  case onboardingTwitter = "OnboardingTwitter"
  case onboardingWhatsApp = "OnboardingWhatsApp"
  case notificationsEnabledCheck = "NotificationsEnabledCheck"
  case onboardingAppIconCalendar = "OnboardingAppIconCalendar"
  case onboardingAppIconMail = "OnboardingAppIconMail"
  case onboardingAppIconMessages = "OnboardingAppIconMessages"
  case onboardingAppIconPhone = "OnboardingAppIconPhone"
  case onboardingAppsPhoneBackground = "OnboardingAppsPhoneBackground"
  case onboardingArrow = "OnboardingArrow"
  case onboardingCaloriesFlame = "OnboardingCaloriesFlame"
  case onboardingChargerBox = "OnboardingChargerBox"
  case onboardingLogo = "OnboardingLogo"
  case onboardingStepsShoes = "OnboardingStepsShoes"
  case pageIndicatorHeart = "PageIndicatorHeart"
  case braceletBackstage = "Bracelet_Backstage"
  case braceletBoardwalk = "Bracelet_Boardwalk"
  case braceletBonVoyage = "Bracelet_BonVoyage"
  case braceletGO01 = "Bracelet_GO01"
  case braceletGO02 = "Bracelet_GO02"
  case braceletJetSet = "Bracelet_JetSet"
  case braceletJoyRide = "Bracelet_JoyRide"
  case braceletLakeside = "Bracelet_Lakeside"
  case braceletPhotoBooth = "Bracelet_PhotoBooth"
  case braceletRendezvous = "Bracelet_Rendezvous"
  case braceletRoadTrip = "Bracelet_RoadTrip"
  case braceletRoseAllDay = "Bracelet_RoseAllDay"
  case ringAfterHours = "Ring_AfterHours"
  case ringDaybreak = "Ring_Daybreak"
  case ringDaydream = "Ring_Daydream"
  case ringDisruptGold = "Ring_DisruptGold"
  case ringDiveBar = "Ring_DiveBar"
  case ringFirstDate = "Ring_FirstDate"
  case ringFullMoon = "Ring_FullMoon"
  case ringHighTide = "Ring_HighTide"
  case ringIntoTheWoods = "Ring_IntoTheWoods"
  case ringOpeningNight = "Ring_OpeningNight"
  case ringOutToSea = "Ring_OutToSea"
  case ringStargaze = "Ring_Stargaze"
  case ringWanderlust = "Ring_Wanderlust"
  case ringWineBar = "Ring_WineBar"
  case onboardingDaybreak = "OnboardingDaybreak"
  case onboardingDaydream = "OnboardingDaydream"
  case onboardingDiveBar = "OnboardingDiveBar"
  case onboardingIntoTheWoods = "OnboardingIntoTheWoods"
  case onboardingOutToSea = "OnboardingOutToSea"
  case onboardingStargaze = "OnboardingStargaze"
  case onboardingWanderlust = "OnboardingWanderlust"
  case onboardingWineBar = "OnboardingWineBar"
  case shadowBracelet = "Shadow_Bracelet"
  case shadowRing = "Shadow_Ring"
  case stylizedBraceletBackstage = "StylizedBraceletBackstage"
  case stylizedBraceletBoardwalk = "StylizedBraceletBoardwalk"
  case stylizedBraceletLakeside = "StylizedBraceletLakeside"
  case stylizedBraceletPhotoBooth = "StylizedBraceletPhotoBooth"
  case stylizedBraceletRendezvous = "StylizedBraceletRendezvous"
  case stylizedBraceletRoadtrip = "StylizedBraceletRoadtrip"
  case peripheralSettingsButton = "PeripheralSettingsButton"
  case preferencesHelpCenter = "PreferencesHelpCenter"
  case preferencesSwitchQuestion = "PreferencesSwitchQuestion"
  case profileCheckMark = "ProfileCheckMark"
  case profileCloseMark = "ProfileCloseMark"
  case profileEditMark = "ProfileEditMark"
  case quickActionActivity = "QuickActionActivity"
  case quickActionAlerts = "QuickActionAlerts"
  case quickActionContacts = "QuickActionContacts"
  case quickActionSettings = "QuickActionSettings"
  case removePeripheralOpenSettings = "RemovePeripheralOpenSettings"
  case ringlyNavigationBarLogo = "RinglyNavigationBarLogo"
  case settingsI = "Settings-i"
  case settingsLight = "SettingsLight"
  case tabActivityTracking = "TabActivityTracking"
  case tabAlerts = "TabAlerts"
  case tabConnect = "TabConnect"
  case tabContacts = "TabContacts"
  case tabPreferences = "TabPreferences"
  case textFieldClear = "TextFieldClear"

  var image: Image {
    let bundle = Bundle(for: BundleToken.self)
    #if os(iOS) || os(tvOS)
    let image = Image(named: rawValue, in: bundle, compatibleWith: nil)
    #elseif os(OSX)
    let image = bundle.image(forResource: rawValue)
    #elseif os(watchOS)
    let image = Image(named: rawValue)
    #endif
    guard let result = image else { fatalError("Unable to load image \(rawValue).") }
    return result
  }
}
// swiftlint:enable type_body_length

extension Image {
  convenience init!(asset: Asset) {
    #if os(iOS) || os(tvOS)
    let bundle = Bundle(for: BundleToken.self)
    self.init(named: asset.rawValue, in: bundle, compatibleWith: nil)
    #elseif os(OSX) || os(watchOS)
    self.init(named: asset.rawValue)
    #endif
  }
}

private final class BundleToken {}

// Generated using SwiftGen, by O.Halligon — https://github.com/SwiftGen/SwiftGen

import Foundation

// swiftlint:disable file_length
// swiftlint:disable line_length

// swiftlint:disable type_body_length
enum L10n {
  /// Activity
  case activity
  /// WHAT'S YOUR BIRTHDATE?
  case activityBirthDatePrompt
  /// HOW TALL ARE YOU?
  case activityHeightPromptLine1
  /// SLIDE TO SELECT
  case activityHeightPromptLine2
  /// YOUR HEIGHT
  case activityHeightPromptLine3
  /// Please connect to Health
  case activityPleaseConnectHealth
  /// Activity powered by Health
  case activityPoweredByHealth
  /// Updated %d hours ago
  case activityUpdatedHoursAgo(Int)
  /// Updated just now
  case activityUpdatedJustNow
  /// Updated %d minutes ago
  case activityUpdatedMinutesAgo(Int)
  /// Updated 1 hour ago
  case activityUpdatedOneHourAgo
  /// Updated 1 minute ago
  case activityUpdatedOneMinuteAgo
  /// Updated 1 second ago
  case activityUpdatedOneSecondAgo
  /// Updated %d seconds ago
  case activityUpdatedSecondsAgo(Int)
  /// Waiting for updates
  case activityWaitingForUpdates
  /// WHAT'S YOUR WEIGHT?
  case activityWeightPromptLine1
  /// SLIDE TO SELECT
  case activityWeightPromptLine2
  /// Alerts
  case alerts
  /// Already signed up?
  case alreadySignedUpQuestion
  ///  ABOVE
  case applicationsEditPromptEnding
  /// ADD AND REMOVE APPS BY TAPPING 
  case applicationsEditPromptStarting
  /// Now supporting %@.
  case applicationsNewSupportAlertBody(String)
  /// Open Alerts to be notified.
  case applicationsNewSupportAlertFallbackBody
  /// We've integrated with new applications.
  case applicationsNewSupportAlertTitle
  /// SET YOUR ALERTS
  case applicationsOnboardingAction
  /// Choose alerts for your favorite apps and filter out the rest.
  case applicationsOnboardingDetails
  /// Calories
  case calories
  /// Your number of calories takes into account the steps taken throughout your day and calories burned while at a resting state such as sleeping or breathing (otherwise known as your BMR).
  case caloriesExplanation
  /// Ringly needs permission to access your camera and photos!
  case cameraAuthorizationDenied
  /// Update your Ringly to use it as a selfie remote.
  case cameraNeedsUpdateDetailText
  /// Cancel
  case cancel
  /// As your day starts to unwind, don’t forget to charge your Ringly so you’re ready for tomorrow. 💎⚡️😴
  case chargeBatteryNotificationDetailText
  /// Remember to Charge Your Ringly
  case chargeBatteryNotificationText
  /// Charged
  case charged
  /// Charging
  case charging
  /// Please check your email for a link to reset your password
  case checkEmailForPasswordLink
  /// Close
  case close
  /// Collecting Diagnostics…
  case collectingDiagnosticData
  /// Connect
  case connect
  /// Connected
  case connected
  /// Connecting
  case connecting
  /// Contacts
  case contacts
  /// To add a contact, please allow %@ access to Contacts in the Settings app.
  case contactsAddAllow(String)
  /// Receive all phone calls and text messages, but flash an additional color for the below contacts.
  case contactsInnerRingOff
  /// Only receive phone calls and text messages from the below contacts.
  case contactsInnerRingOn
  /// ADD A CONTACT
  case contactsOnboardingAction
  /// Know when your VIPs are calling or texting by assigning them a special light color.\n\nTheir unique color will shine after the alert comes through.
  case contactsOnboardingDetails
  /// Looks like you have too many friends. Ringly can only support up to 32 contacts.
  case contactsTooManyDetailText
  /// Oh Snap!
  case contactsTooManyText
  /// Make sure your Ringly is charging.
  case dfuChecklistOne
  /// Disconnect or turn off any Bluetooth audio devices connected to your phone.
  case dfuChecklistThree
  /// Keep your phone close to your Ringly.
  case dfuChecklistTwo
  /// Your Ringly is using the latest and greatest software.\nEnjoy! 😘
  case dfuCompleteDetailText
  /// ALL DONE
  case dfuCompleteText
  /// CONNECTING...
  case dfuConnectingText
  /// Please do the following...
  case dfuFailedAlertBody
  /// Looks like your update didn't complete. Check to make sure your Ringly is in range and charging, and let's try this again.
  case dfuFailedAlertDescription
  /// YOUR RINGLY DIDN'T UPDATE
  case dfuFailedAlertTitle
  /// Well done. Let's go!
  case dfuPhoneBatteryCompleteText
  /// Please plug in your device to proceed.
  case dfuPhoneBatteryDetailText
  /// Low Battery
  case dfuPhoneBatteryText
  /// We're prepping your Ringly for it's update! It's light will show a rainbow pattern during the update, pretty right? 🌈
  case dfuProgressDetailTextMultipleUpdates
  /// Won't be long now! Remember to stay close and plugged in!
  case dfuProgressDetailTextSingleUpdate
  /// Let's try the following...
  case dfuReconnectAlertBody
  /// WE LOST CONNECTION
  case dfuReconnectAlertTitle
  /// This update should only take a few minutes. A couple things to check before we start:
  case dfuRingInChargerDetailText
  /// READY TO UPDATE?
  case dfuRingInChargerText
  /// Swipe up from the bottom of your screen & toggle Bluetooth off, then on.\nEasy, Right?
  case dfuToggleBluetoothDetailText
  /// Reset Bluetooth
  case dfuToggleBluetoothText
  /// Trying to reconnect...
  case dfuTryingToReconnect
  /// COMPLETE THE ABOVE STEPS\nTO PROCEED.
  case dfuUnpairFirstDetailText
  /// Let’s unpair your Ringly\nin the settings app
  case dfuUnpairFirstText
  /// COMPLETE THE ABOVE STEPS\nONE MORE TIME.
  case dfuUnpairSecondDetailText
  /// Unpair your Ringly again. Last time, we promise!
  case dfuUnpairSecondText
  /// UPDATING...
  case dfuUpdatingText
  /// Distance
  case distance
  /// You're connected to Apple Health! Your total number of steps include your activity from both your Ringly and your iPhone.
  case distanceExplanationWithHealth
  /// Want to count steps from your phone? Enable Apple Health in Settings > Privacy > Health > Ringly and turn on both the "Read Data" and "Write Data" permissions.
  case distanceExplanationWithoutHealth
  /// DONE
  case done
  /// edit
  case engagementAddRemoveApplicationsAlertAction
  /// RINGLY supports over 200 apps. Be sure to select the ones you think are important.
  case engagementAddRemoveApplicationsAlertBody
  /// edit
  case engagementEditApplicationBehaviorAlertAction
  /// You can change the color and vibration of alerts. Have you tried it yet? 🌈
  case engagementEditApplicationBehaviorAlertBody
  /// set up
  case engagementSetUpActivityAlertAction
  /// We're glad you're with us! Let's set up your activity and mindfulness goals. 🏃‍♀️
  case engagementSetUpActivityAlertBody
  /// Need to de-stress this afternoon? Try a one minute breathing exercise. 🌬
  case engagementStartedBreatherAlertBody
  /// Take a moment for some peace of mind. Try a guided audio meditation. 🙏
  case engagementStartedMeditationAlertBody
  /// How's your step count? Make sure you're staying hydrated. 💧
  case engagementStayHydratedAlertBody
  /// 🏅 See if you can hit your %@ step goal today! One foot in front of the other.
  case engagementStepGoalEncouragementAlertBody(String)
  /// ft
  case feetShort
  /// Finish
  case finish
  /// Finished
  case finished
  /// Success! Diagnostics sent to the customer support team.
  case finishedUploadingDiagnosticData
  /// Forgot Password?
  case forgotPasswordQuestion
  /// FORGOT YOUR\nPASSWORD?
  case forgotPasswordTitle
  /// Your Ringly is charged and ready to rock the day. 💯💎
  case fullBatteryNotificationDetailText
  /// Full Battery
  case fullBatteryNotificationText
  /// Get started
  case getStarted
  /// Go for it
  case goForIt
  /// Got it
  case gotIt
  /// in
  case inchesShort
  /// Let’s go!
  case letsGo
  /// Let’s update your Ringly
  case letsUpdateYourRingly
  /// Login
  case login
  /// Log Out
  case logOut
  /// Your %@ has %d%%%% charge remaining.
  case lowBatteryNotificationDetailText(String, Int)
  /// Low Battery
  case lowBatteryNotificationText
  /// Daily Reminder
  case mindfulnessOnboardingAction
  /// Set a goal to de-stress each day with mindfulness exercises.
  case mindfulnessOnboardingDetails
  /// New to Ringly?
  case newToRinglyQuestion
  /// Next
  case next
  /// Not now
  case notNow
  /// Not Connected
  case notConnected
  /// Notifications
  case notifications
  /// OK!
  case okExclamation
  /// Ringly discreetly tracks your steps, distance, and calories burned.
  case onboardingActivityDescription
  /// TRACK YOUR\nDAILY ACTIVITY
  case onboardingActivityTitle
  /// Ringly connects to your phone and lets you customize mobile alerts through vibration and subtle light.
  case onboardingAppsDescription
  /// WELCOME TO RINGLY
  case onboardingAppsTitle
  /// ALLOW NOTIFICATIONS
  case onboardingNotificationsAccept
  /// NO THANKS
  case onboardingNotificationsDecline
  /// Know when you reach your goals, stay motivated, and keep tabs on your battery with Ringly notifications.
  case onboardingNotificationsDescription
  /// CELEBRATE GOALS & STAY MOTIVATED
  case onboardingNotificationsTitle
  /// Open Activity
  case openActivity
  /// Open Alerts
  case openAlerts
  /// Open Email
  case openEmail
  /// Open in %@
  case openIn(String)
  /// Open Settings
  case openSettings
  /// Password must be 8 or more characters.
  case passwordRequirementsLong
  /// 8 or more characters
  case passwordRequirementsShort
  /// ADD JEWELRY
  case peripheralsAddJewelry
  /// Jewelry
  case peripheralsJewelry
  /// Please make sure your Ringly is charged, and try to connect again.
  case peripheralsMakeSureCharged
  /// Oh dear - We can’t seem to connect with your Ringly. Make sure your Ringly is charging and try to connect again.
  case peripheralsPlaceInCharger
  /// lb
  case poundsShort
  /// Reconnect
  case reconnect
  /// Remove
  case remove
  /// Reset Password
  case resetPassword
  /// Restart update
  case restartUpdate
  /// Discard Feedback
  case reviewsFeedbackDiscard
  /// Feedback
  case reviewsFeedbackTitle
  /// OK, Sure
  case reviewsNegativeAction
  /// We would love to make your Ringly experience better.
  case reviewsNegativeBody
  /// 💎
  case reviewsNegativeCompletionEmoji
  /// You're a gem!\nThank you so much for your feedback!
  case reviewsNegativeCompletionTitle
  /// No Thanks
  case reviewsNegativeDismiss
  /// 🙁
  case reviewsNegativeEmoji
  /// Would you mind leaving feedback?
  case reviewsNegativeTitle
  /// OK, Sure
  case reviewsPositiveAction
  /// How about rating us on the App Store?
  case reviewsPositiveBody
  /// No Thanks
  case reviewsPositiveDismiss
  /// 😊
  case reviewsPositiveEmoji
  /// We're so happy you love Ringly!
  case reviewsPositiveTitle
  /// Not really
  case reviewsPromptNegative
  /// Yes!
  case reviewsPromptPositive
  /// Are you\nenjoying Ringly?
  case reviewsPromptTitle
  /// Select
  case select
  /// For access to our Selfie feature, we'll need to update your Ringly.
  case selfieUpdateReason
  /// Send
  case send
  /// To receive activity encouragement, please enable notification alerts for %@ in the Settings app.
  case settingsEnableActivityEncouragementPrompt(String)
  /// Enable Alerts
  case settingsEnableAlerts
  /// To receive battery alerts, please enable notification alerts for %@ in the Settings app.
  case settingsEnableBatteryAlertsPrompt(String)
  /// To receive mindfulness reminders, please enable notification alerts for %@ in the Settings app.
  case settingsEnableMindfulnessAlertsPrompt(String)
  /// Sign Up
  case signUp
  /// Skip
  case skip
  /// STAY ACTIVE
  case stayActive
  /// Steps
  case steps
  /// Activity
  case tabBarActivity
  /// Alerts
  case tabBarAlerts
  /// Connect
  case tabBarConnect
  /// Contacts
  case tabBarContacts
  /// Settings
  case tabBarSettings
  /// Today
  case today
  /// Uh oh!
  case uhOh
  /// Update your Ringly
  case updateYourRingly
  /// Uploading Diagnostics…
  case uploadingDiagnosticData
  /// , 
  case wordSeparatorMultipleInitial
  /// , and 
  case wordSeparatorMultipleLast
  ///  and 
  case wordSeparatorSingle
}
// swiftlint:enable type_body_length

extension L10n: CustomStringConvertible {
  var description: String { return self.string }

  var string: String {
    switch self {
      case .activity:
        return L10n.tr(key: "Activity")
      case .activityBirthDatePrompt:
        return L10n.tr(key: "ActivityBirthDatePrompt")
      case .activityHeightPromptLine1:
        return L10n.tr(key: "ActivityHeightPromptLine1")
      case .activityHeightPromptLine2:
        return L10n.tr(key: "ActivityHeightPromptLine2")
      case .activityHeightPromptLine3:
        return L10n.tr(key: "ActivityHeightPromptLine3")
      case .activityPleaseConnectHealth:
        return L10n.tr(key: "ActivityPleaseConnectHealth")
      case .activityPoweredByHealth:
        return L10n.tr(key: "ActivityPoweredByHealth")
      case .activityUpdatedHoursAgo(let p1):
        return L10n.tr(key: "ActivityUpdatedHoursAgo", p1)
      case .activityUpdatedJustNow:
        return L10n.tr(key: "ActivityUpdatedJustNow")
      case .activityUpdatedMinutesAgo(let p1):
        return L10n.tr(key: "ActivityUpdatedMinutesAgo", p1)
      case .activityUpdatedOneHourAgo:
        return L10n.tr(key: "ActivityUpdatedOneHourAgo")
      case .activityUpdatedOneMinuteAgo:
        return L10n.tr(key: "ActivityUpdatedOneMinuteAgo")
      case .activityUpdatedOneSecondAgo:
        return L10n.tr(key: "ActivityUpdatedOneSecondAgo")
      case .activityUpdatedSecondsAgo(let p1):
        return L10n.tr(key: "ActivityUpdatedSecondsAgo", p1)
      case .activityWaitingForUpdates:
        return L10n.tr(key: "ActivityWaitingForUpdates")
      case .activityWeightPromptLine1:
        return L10n.tr(key: "ActivityWeightPromptLine1")
      case .activityWeightPromptLine2:
        return L10n.tr(key: "ActivityWeightPromptLine2")
      case .alerts:
        return L10n.tr(key: "Alerts")
      case .alreadySignedUpQuestion:
        return L10n.tr(key: "AlreadySignedUpQuestion")
      case .applicationsEditPromptEnding:
        return L10n.tr(key: "ApplicationsEditPromptEnding")
      case .applicationsEditPromptStarting:
        return L10n.tr(key: "ApplicationsEditPromptStarting")
      case .applicationsNewSupportAlertBody(let p1):
        return L10n.tr(key: "ApplicationsNewSupportAlertBody", p1)
      case .applicationsNewSupportAlertFallbackBody:
        return L10n.tr(key: "ApplicationsNewSupportAlertFallbackBody")
      case .applicationsNewSupportAlertTitle:
        return L10n.tr(key: "ApplicationsNewSupportAlertTitle")
      case .applicationsOnboardingAction:
        return L10n.tr(key: "ApplicationsOnboardingAction")
      case .applicationsOnboardingDetails:
        return L10n.tr(key: "ApplicationsOnboardingDetails")
      case .calories:
        return L10n.tr(key: "Calories")
      case .caloriesExplanation:
        return L10n.tr(key: "CaloriesExplanation")
      case .cameraAuthorizationDenied:
        return L10n.tr(key: "CameraAuthorizationDenied")
      case .cameraNeedsUpdateDetailText:
        return L10n.tr(key: "CameraNeedsUpdateDetailText")
      case .cancel:
        return L10n.tr(key: "Cancel")
      case .chargeBatteryNotificationDetailText:
        return L10n.tr(key: "ChargeBatteryNotificationDetailText")
      case .chargeBatteryNotificationText:
        return L10n.tr(key: "ChargeBatteryNotificationText")
      case .charged:
        return L10n.tr(key: "Charged")
      case .charging:
        return L10n.tr(key: "Charging")
      case .checkEmailForPasswordLink:
        return L10n.tr(key: "CheckEmailForPasswordLink")
      case .close:
        return L10n.tr(key: "Close")
      case .collectingDiagnosticData:
        return L10n.tr(key: "CollectingDiagnosticData")
      case .connect:
        return L10n.tr(key: "Connect")
      case .connected:
        return L10n.tr(key: "Connected")
      case .connecting:
        return L10n.tr(key: "Connecting")
      case .contacts:
        return L10n.tr(key: "Contacts")
      case .contactsAddAllow(let p1):
        return L10n.tr(key: "ContactsAddAllow", p1)
      case .contactsInnerRingOff:
        return L10n.tr(key: "ContactsInnerRingOff")
      case .contactsInnerRingOn:
        return L10n.tr(key: "ContactsInnerRingOn")
      case .contactsOnboardingAction:
        return L10n.tr(key: "ContactsOnboardingAction")
      case .contactsOnboardingDetails:
        return L10n.tr(key: "ContactsOnboardingDetails")
      case .contactsTooManyDetailText:
        return L10n.tr(key: "ContactsTooManyDetailText")
      case .contactsTooManyText:
        return L10n.tr(key: "ContactsTooManyText")
      case .dfuChecklistOne:
        return L10n.tr(key: "DFUChecklistOne")
      case .dfuChecklistThree:
        return L10n.tr(key: "DFUChecklistThree")
      case .dfuChecklistTwo:
        return L10n.tr(key: "DFUChecklistTwo")
      case .dfuCompleteDetailText:
        return L10n.tr(key: "DFUCompleteDetailText")
      case .dfuCompleteText:
        return L10n.tr(key: "DFUCompleteText")
      case .dfuConnectingText:
        return L10n.tr(key: "DFUConnectingText")
      case .dfuFailedAlertBody:
        return L10n.tr(key: "DFUFailedAlertBody")
      case .dfuFailedAlertDescription:
        return L10n.tr(key: "DFUFailedAlertDescription")
      case .dfuFailedAlertTitle:
        return L10n.tr(key: "DFUFailedAlertTitle")
      case .dfuPhoneBatteryCompleteText:
        return L10n.tr(key: "DFUPhoneBatteryCompleteText")
      case .dfuPhoneBatteryDetailText:
        return L10n.tr(key: "DFUPhoneBatteryDetailText")
      case .dfuPhoneBatteryText:
        return L10n.tr(key: "DFUPhoneBatteryText")
      case .dfuProgressDetailTextMultipleUpdates:
        return L10n.tr(key: "DFUProgressDetailTextMultipleUpdates")
      case .dfuProgressDetailTextSingleUpdate:
        return L10n.tr(key: "DFUProgressDetailTextSingleUpdate")
      case .dfuReconnectAlertBody:
        return L10n.tr(key: "DFUReconnectAlertBody")
      case .dfuReconnectAlertTitle:
        return L10n.tr(key: "DFUReconnectAlertTitle")
      case .dfuRingInChargerDetailText:
        return L10n.tr(key: "DFURingInChargerDetailText")
      case .dfuRingInChargerText:
        return L10n.tr(key: "DFURingInChargerText")
      case .dfuToggleBluetoothDetailText:
        return L10n.tr(key: "DFUToggleBluetoothDetailText")
      case .dfuToggleBluetoothText:
        return L10n.tr(key: "DFUToggleBluetoothText")
      case .dfuTryingToReconnect:
        return L10n.tr(key: "DFUTryingToReconnect")
      case .dfuUnpairFirstDetailText:
        return L10n.tr(key: "DFUUnpairFirstDetailText")
      case .dfuUnpairFirstText:
        return L10n.tr(key: "DFUUnpairFirstText")
      case .dfuUnpairSecondDetailText:
        return L10n.tr(key: "DFUUnpairSecondDetailText")
      case .dfuUnpairSecondText:
        return L10n.tr(key: "DFUUnpairSecondText")
      case .dfuUpdatingText:
        return L10n.tr(key: "DFUUpdatingText")
      case .distance:
        return L10n.tr(key: "Distance")
      case .distanceExplanationWithHealth:
        return L10n.tr(key: "DistanceExplanationWithHealth")
      case .distanceExplanationWithoutHealth:
        return L10n.tr(key: "DistanceExplanationWithoutHealth")
      case .done:
        return L10n.tr(key: "Done")
      case .engagementAddRemoveApplicationsAlertAction:
        return L10n.tr(key: "EngagementAddRemoveApplicationsAlertAction")
      case .engagementAddRemoveApplicationsAlertBody:
        return L10n.tr(key: "EngagementAddRemoveApplicationsAlertBody")
      case .engagementEditApplicationBehaviorAlertAction:
        return L10n.tr(key: "EngagementEditApplicationBehaviorAlertAction")
      case .engagementEditApplicationBehaviorAlertBody:
        return L10n.tr(key: "EngagementEditApplicationBehaviorAlertBody")
      case .engagementSetUpActivityAlertAction:
        return L10n.tr(key: "EngagementSetUpActivityAlertAction")
      case .engagementSetUpActivityAlertBody:
        return L10n.tr(key: "EngagementSetUpActivityAlertBody")
      case .engagementStartedBreatherAlertBody:
        return L10n.tr(key: "EngagementStartedBreatherAlertBody")
      case .engagementStartedMeditationAlertBody:
        return L10n.tr(key: "EngagementStartedMeditationAlertBody")
      case .engagementStayHydratedAlertBody:
        return L10n.tr(key: "EngagementStayHydratedAlertBody")
      case .engagementStepGoalEncouragementAlertBody(let p1):
        return L10n.tr(key: "EngagementStepGoalEncouragementAlertBody", p1)
      case .feetShort:
        return L10n.tr(key: "FeetShort")
      case .finish:
        return L10n.tr(key: "Finish")
      case .finished:
        return L10n.tr(key: "Finished")
      case .finishedUploadingDiagnosticData:
        return L10n.tr(key: "FinishedUploadingDiagnosticData")
      case .forgotPasswordQuestion:
        return L10n.tr(key: "ForgotPasswordQuestion")
      case .forgotPasswordTitle:
        return L10n.tr(key: "ForgotPasswordTitle")
      case .fullBatteryNotificationDetailText:
        return L10n.tr(key: "FullBatteryNotificationDetailText")
      case .fullBatteryNotificationText:
        return L10n.tr(key: "FullBatteryNotificationText")
      case .getStarted:
        return L10n.tr(key: "GetStarted")
      case .goForIt:
        return L10n.tr(key: "GoForIt")
      case .gotIt:
        return L10n.tr(key: "GotIt")
      case .inchesShort:
        return L10n.tr(key: "InchesShort")
      case .letsGo:
        return L10n.tr(key: "LetsGo")
      case .letsUpdateYourRingly:
        return L10n.tr(key: "LetsUpdateYourRingly")
      case .login:
        return L10n.tr(key: "Login")
      case .logOut:
        return L10n.tr(key: "LogOut")
      case .lowBatteryNotificationDetailText(let p1, let p2):
        return L10n.tr(key: "LowBatteryNotificationDetailText", p1, p2)
      case .lowBatteryNotificationText:
        return L10n.tr(key: "LowBatteryNotificationText")
      case .mindfulnessOnboardingAction:
        return L10n.tr(key: "MindfulnessOnboardingAction")
      case .mindfulnessOnboardingDetails:
        return L10n.tr(key: "MindfulnessOnboardingDetails")
      case .newToRinglyQuestion:
        return L10n.tr(key: "NewToRinglyQuestion")
      case .next:
        return L10n.tr(key: "Next")
      case .notNow:
        return L10n.tr(key: "Not now")
      case .notConnected:
        return L10n.tr(key: "NotConnected")
      case .notifications:
        return L10n.tr(key: "Notifications")
      case .okExclamation:
        return L10n.tr(key: "OKExclamation")
      case .onboardingActivityDescription:
        return L10n.tr(key: "OnboardingActivityDescription")
      case .onboardingActivityTitle:
        return L10n.tr(key: "OnboardingActivityTitle")
      case .onboardingAppsDescription:
        return L10n.tr(key: "OnboardingAppsDescription")
      case .onboardingAppsTitle:
        return L10n.tr(key: "OnboardingAppsTitle")
      case .onboardingNotificationsAccept:
        return L10n.tr(key: "OnboardingNotificationsAccept")
      case .onboardingNotificationsDecline:
        return L10n.tr(key: "OnboardingNotificationsDecline")
      case .onboardingNotificationsDescription:
        return L10n.tr(key: "OnboardingNotificationsDescription")
      case .onboardingNotificationsTitle:
        return L10n.tr(key: "OnboardingNotificationsTitle")
      case .openActivity:
        return L10n.tr(key: "OpenActivity")
      case .openAlerts:
        return L10n.tr(key: "OpenAlerts")
      case .openEmail:
        return L10n.tr(key: "OpenEmail")
      case .openIn(let p1):
        return L10n.tr(key: "OpenIn", p1)
      case .openSettings:
        return L10n.tr(key: "OpenSettings")
      case .passwordRequirementsLong:
        return L10n.tr(key: "PasswordRequirementsLong")
      case .passwordRequirementsShort:
        return L10n.tr(key: "PasswordRequirementsShort")
      case .peripheralsAddJewelry:
        return L10n.tr(key: "PeripheralsAddJewelry")
      case .peripheralsJewelry:
        return L10n.tr(key: "PeripheralsJewelry")
      case .peripheralsMakeSureCharged:
        return L10n.tr(key: "PeripheralsMakeSureCharged")
      case .peripheralsPlaceInCharger:
        return L10n.tr(key: "PeripheralsPlaceInCharger")
      case .poundsShort:
        return L10n.tr(key: "PoundsShort")
      case .reconnect:
        return L10n.tr(key: "Reconnect")
      case .remove:
        return L10n.tr(key: "Remove")
      case .resetPassword:
        return L10n.tr(key: "ResetPassword")
      case .restartUpdate:
        return L10n.tr(key: "RestartUpdate")
      case .reviewsFeedbackDiscard:
        return L10n.tr(key: "ReviewsFeedbackDiscard")
      case .reviewsFeedbackTitle:
        return L10n.tr(key: "ReviewsFeedbackTitle")
      case .reviewsNegativeAction:
        return L10n.tr(key: "ReviewsNegativeAction")
      case .reviewsNegativeBody:
        return L10n.tr(key: "ReviewsNegativeBody")
      case .reviewsNegativeCompletionEmoji:
        return L10n.tr(key: "ReviewsNegativeCompletionEmoji")
      case .reviewsNegativeCompletionTitle:
        return L10n.tr(key: "ReviewsNegativeCompletionTitle")
      case .reviewsNegativeDismiss:
        return L10n.tr(key: "ReviewsNegativeDismiss")
      case .reviewsNegativeEmoji:
        return L10n.tr(key: "ReviewsNegativeEmoji")
      case .reviewsNegativeTitle:
        return L10n.tr(key: "ReviewsNegativeTitle")
      case .reviewsPositiveAction:
        return L10n.tr(key: "ReviewsPositiveAction")
      case .reviewsPositiveBody:
        return L10n.tr(key: "ReviewsPositiveBody")
      case .reviewsPositiveDismiss:
        return L10n.tr(key: "ReviewsPositiveDismiss")
      case .reviewsPositiveEmoji:
        return L10n.tr(key: "ReviewsPositiveEmoji")
      case .reviewsPositiveTitle:
        return L10n.tr(key: "ReviewsPositiveTitle")
      case .reviewsPromptNegative:
        return L10n.tr(key: "ReviewsPromptNegative")
      case .reviewsPromptPositive:
        return L10n.tr(key: "ReviewsPromptPositive")
      case .reviewsPromptTitle:
        return L10n.tr(key: "ReviewsPromptTitle")
      case .select:
        return L10n.tr(key: "Select")
      case .selfieUpdateReason:
        return L10n.tr(key: "SelfieUpdateReason")
      case .send:
        return L10n.tr(key: "Send")
      case .settingsEnableActivityEncouragementPrompt(let p1):
        return L10n.tr(key: "SettingsEnableActivityEncouragementPrompt", p1)
      case .settingsEnableAlerts:
        return L10n.tr(key: "SettingsEnableAlerts")
      case .settingsEnableBatteryAlertsPrompt(let p1):
        return L10n.tr(key: "SettingsEnableBatteryAlertsPrompt", p1)
      case .settingsEnableMindfulnessAlertsPrompt(let p1):
        return L10n.tr(key: "SettingsEnableMindfulnessAlertsPrompt", p1)
      case .signUp:
        return L10n.tr(key: "SignUp")
      case .skip:
        return L10n.tr(key: "Skip")
      case .stayActive:
        return L10n.tr(key: "StayActive")
      case .steps:
        return L10n.tr(key: "Steps")
      case .tabBarActivity:
        return L10n.tr(key: "TabBarActivity")
      case .tabBarAlerts:
        return L10n.tr(key: "TabBarAlerts")
      case .tabBarConnect:
        return L10n.tr(key: "TabBarConnect")
      case .tabBarContacts:
        return L10n.tr(key: "TabBarContacts")
      case .tabBarSettings:
        return L10n.tr(key: "TabBarSettings")
      case .today:
        return L10n.tr(key: "Today")
      case .uhOh:
        return L10n.tr(key: "UhOh")
      case .updateYourRingly:
        return L10n.tr(key: "UpdateYourRingly")
      case .uploadingDiagnosticData:
        return L10n.tr(key: "UploadingDiagnosticData")
      case .wordSeparatorMultipleInitial:
        return L10n.tr(key: "WordSeparatorMultipleInitial")
      case .wordSeparatorMultipleLast:
        return L10n.tr(key: "WordSeparatorMultipleLast")
      case .wordSeparatorSingle:
        return L10n.tr(key: "WordSeparatorSingle")
    }
  }

  private static func tr(key: String, _ args: CVarArg...) -> String {
    let format = NSLocalizedString(key, bundle: Bundle(for: BundleToken.self), comment: "")
    return String(format: format, locale: Locale.current, arguments: args)
  }
}

func tr(_ key: L10n) -> String {
  return key.string
}
